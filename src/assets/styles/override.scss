$xsmall: 0.25rem;
$small: 0.5rem;
$medium: 0.75rem;
$default: 1rem;
$large: 1.5rem;

.uk-icon-button { 
  background-color: transparent;
  cursor: pointer;
  &:hover {
    border-radius: 4px;
    background: transparent;
  }
}

.uk-input {
  border-color: var(--color-text-muted);
  &::placeholder {
    color: var(--color-text);
  }
}

.uk-search-input::placeholder {
  color: var(--color-text);
}

.uk-button {
  border-radius: 30px;
  text-transform: none !important;
  padding: 4px 16px !important;
  background-color: var(--color-bg-muted);
  color: var(--color-text-emphasis);
  transition: none;
  &.selected {
    background-color: var(--color-text-emphasis);
    color: var(--color-bg-emphasis);
  }
}

.uk-radio {
  width: 12px;
  height: 12px;
}

.uk-radio:checked, .uk-checkbox:checked, .uk-checkbox:indeterminate {
  background-color: var(--color-text-emphasis) !important;
  background-image: none;
}

.uk-checkbox {
  border-radius: 50%;
}

.uk-table {
  margin-bottom: 12px;  
  table-layout:fixed;
  width: 100%;
  td {
    color: var(--color-text-emphasis)
  }
  tbody > tr {
    transition: none;
  }
}

.uk-table:not(.uk-table-striped):not(.uk-table-striped-inverse) > thead {
  border-bottom: 1px solid var(--color-bg-muted);
}

.uk-table > thead {
  tr {
    background-color: transparent !important;
  }
  th {
    font-size: 16px;
    line-height: 1;
    color: var(--color-text-muted);
    text-transform: none;
  }
}


.uk-table-divider > tr:not(:first-child), .uk-table-divider > :not(:first-child) > tr, 
.uk-table-divider > :first-child > tr:not(:first-child) {
  border-color: var(--color-text-muted);
}

.uk-table-striped > tr:nth-of-type(odd):not(:first-child), .uk-table-striped tbody tr:nth-of-type(odd):not(:first-child) { 
  background: var(--color-bg-hovered);
  border-top: none;
  border-bottom: none;
}

.uk-table-striped > tr:first-child, .uk-table-striped tbody tr:first-child {
  background: var(--color-bg-hovered);
  border-top: 1px solid var(--color-bg-shadow);
  border-bottom: none;
}

.uk-table-divider > tr:not(:first-child), .uk-table-divider > :not(:first-child) > tr, 
.uk-table-divider > :first-child > tr:not(:first-child) { 
  border-top: none;
}

.uk-table-striped > tr:nth-of-type(even):last-child, .uk-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom: 1px solid var(--color-bg-shadow);
}

.uk-table-striped-inverse > thead {
  border-bottom: 1px solid var(--color-bg-shadow);
}

.uk-table-striped-inverse > tr:nth-of-type(odd), .uk-table-striped-inverse tbody tr:nth-of-type(odd) {
  background-color: transparent;
}

.uk-table-striped-inverse > tr:nth-of-type(even):not(:last-child), .uk-table-striped-inverse tbody tr:nth-of-type(even):not(:last-child) {
  background-color: var(--color-bg-muted);
  border-top: none;
}

.uk-table-striped-inverse > tr:nth-of-type(even):last-child, .uk-table-striped-inverse tbody tr:nth-of-type(even):last-child {
  border-bottom: none;
  border-top: none;
  td {
    background-color: var(--color-bg-muted);
  }
}

// Margins & paddings
@function selectorName($type, $attr) {
  @if $attr == default {
    @return '.uk-#{$type}';
  }
  @else {
    @return '.uk-#{$type}-#{$attr}';
  }
}

@each $type in padding, margin {
  @each $attr, $size in (xsmall: $xsmall, small: $small, medium: $medium, default: $default, large: $large) {
    #{selectorName($type, $attr)} {
      @if $type == padding {
        #{$type}: $size !important; 
      }
      @else {
        #{$type}-bottom: $size !important; 
      }
    }
    #{selectorName($type, $attr)}-horizontal {
      #{$type}-left: $size !important; 
      #{$type}-right: $size !important; 
    }
    #{selectorName($type, $attr)}-vertical {
      #{$type}-top: $size !important; 
      #{$type}-bottom: $size !important; 
    }
    @each $direction in top, left, bottom, right {
      #{selectorName($type, $attr)}-#{$direction} {
        #{$type}-#{$direction}: $size !important; 
      }
    }
  }
}

.uk-tooltip {
  background-color: var(--color-bg-emphasis);
  padding: 12px 16px;
  border-radius: 8px;
  box-shadow: 0px 0px 20px 0px var(--color-bg-shadow);
  font-size: 1rem;
  color: var(--color-text-emphasis);
  word-wrap: break-word;
  max-width: 400px;
}

.uk-button:disabled {
  cursor: not-allowed !important;
  color: var(--color-bg-emphasis);
}

.ui.selection.dropdown {
  background: var(--color-bg-emphasis);
  border-color: var(--color-text-muted);
  color: var(--color-text-muted);
  &:hover {
    border-color: var(--color-text-muted);
  }
}

.ui.dropdown .menu {
  background: var(--color-bg-emphasis);
  color: var(--color-text-emphasis);
}

.ui.selection.dropdown .menu {
  .item {
    border-color: var(--color-bg-emphasis);
    color: var(--color-text-emphasis);
  }
}

.ui.dropdown.selected, .ui.dropdown .menu .selected.item {
  background: var(--color-bg-muted);
  color: var(--color-text-emphasis);
}

.ui.dropdown:not(.button)>.default.text {
  color: var(--color-text-muted);
}

.dp__input {
  border-color: var(--color-text-muted);
}
// Default color classes override 

.uk-background-primary {
  background-color: var(--color-bg-emphasis) !important;
}

.uk-background-default {
  background-color: var(--color-bg) !important;
}

.uk-background-emphasis {
  background-color: var(--color-text-highlight) !important;
}

.uk-background-muted {
  background-color: var(--color-bg-muted) !important;
}

.uk-text-primary {
  color: var(--color-text-emphasis) !important;
}

.uk-text-secondary, .uk-text-default {
  color: var(--color-text) !important;
}

.uk-text-blend {
  color: var(--color-text-blend) !important;
}

.uk-text-muted {
  color: var(--color-text-muted) !important;
}

.uk-text-emphasis {
  color: var(--color-text-highlight) !important;
}